<?xml version="1.0"?>
<launch>
    <!-- <arg name="model" value="burger" doc="model type [burger, waffle, waffle_pi]"/> -->
    <!-- <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/> -->
    <!-- <arg name="open_rviz" default="true"/> -->
    <!-- 启动仿真环境 -->
    <!-- <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch"> -->
        <!-- <arg name="model" value="$(arg model)" /> -->
    <!-- </include> -->
    <!-- <include file="$(find clean_robot)/launch/gazebo.launch"/> -->
    <!-- 启动导航系统，用作目标点路径规划，实现躲避小障碍物-->
    <!-- <include file="$(find clean_robot)/launch/turtlebot3_navigation.launch"> -->
        <!-- <arg name="model" value="$(arg model)" /> -->
    <!-- </include> -->
    <!-- AMCL -->
    <include file="$(find kobuki_metapackage)/launch/gazebo/gmapping/kobuki_amcl_gazebo.launch"/>

    <!-- move_base -->
    <arg name="cmd_vel_topic" default="cmd_vel" />
    <arg name="odom_topic" default="odom" />
    <arg name="scan_topic" default="scan" />

   <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">
      <rosparam file="$(find kobuki_metapackage)/param/path_plan_common.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find kobuki_metapackage)/param/path_plan_common.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find kobuki_metapackage)/param/path_plan_local.yaml" command="load" />
      <rosparam file="$(find kobuki_metapackage)/param/path_plan_global.yaml" command="load" />
      <rosparam file="$(find kobuki_metapackage)/param/dwa_local_planner_params.yaml" command="load" />
      <rosparam file="$(find kobuki_metapackage)/param/move_base_params.yaml" command="load" />
      <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
      <remap from="odom" to="$(arg odom_topic)"/>
      <remap from="scan" to="$(arg scan_topic)"/>
    </node>

    <!-- rviz for kobuki navigation -->
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find kobuki_metapackage)/rviz/kobuki_nav.rviz" />

    
    <!-- 清扫路径规划器 -->
    <!-- <node pkg="clean_robot" type="path_planning_node" respawn="false" name="path_planning_node" output="screen" clear_params="true">
        <rosparam file="$(find clean_robot)/config/costmap_common_params.yaml" command="load" ns="cleaning_costmap" />
        <rosparam file="$(find clean_robot)/config/cleaning_costmap_params.yaml" command="load" />
    </node> -->

    <!-- 청소 경로에 따라 목표 지점을 보낸다. -->
    <!-- 다음 목표 지점이 현재 목표 지점보다 많을 때 해제됨. -->
    <param name="/NextGoal/tolerance_goal" value="0.25" />
    <node pkg="clean_robot" type="next_goal" respawn="true" name="next_goal" output="screen" />
</launch>

